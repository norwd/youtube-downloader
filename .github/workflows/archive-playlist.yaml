---

name: "Archive Playlist"
run-name: "Archive Playlist"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Environment to archive the playlist in

  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        description: Environment to archive the playlist in

defaults:
  run:
    shell: bash

env:
  GH_REPO: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.AUTO_DOWNLOAD }}

concurrency:
  group: ${{ github.workflow_ref }}-${{ inputs.environment }}
  cancel-in-progress: false

jobs:

  enumerate-playlist:
    name: Enumerate Playlist
    runs-on: ubuntu-latest
    timeout-minutes: 1000 # Max time out is lower, but allow for future increase
    environment: ${{ inputs.environment }}
    env:
      URL: ${{ secrets.url }}
    
    steps:

      - name: Install
        run: |
          mkdir -p ~/.local/bin
          echo "~/.local/bin" >> "$GITHUB_PATH"
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
          chmod a+rx ~/.local/bin/yt-dlp
          sudo apt install -y tor

      - id: enumerate
        name: Enumerate
        run: |
          yt-dlp "${URL}" \
            --proxy socks5h://localhost:9050 \
            --print webpage_url \
            --quiet --verbose \
            --ignore-errors \
            --flat-playlist |
          jq --raw-input |
          sort --random-sort |
          jq --slurp --raw-output '"urls=\(.[:256])"' |
          tee -a "${GITHUB_OUTPUT}"

    outputs:
      urls: ${{ steps.enumerate.outputs.urls }}

  archive-video:
    name: "Archive Video"
    needs: enumerate-playlist
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        url: ${{ fromJSON(needs.enumerate-playlist.outputs.urls) }}

    secrets: inherit
    uses: ./.github/workflows/archive-video.yaml
    with:
      environment: ${{ inputs.environment }}
      url: ${{ matrix.url }}
